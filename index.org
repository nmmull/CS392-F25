#+title: CAS CS 392
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="myStyle.css" />
#+OPTIONS: html-style:nil H:2 toc:1 num:nil
#+HTML_LINK_HOME: http://nmmull.github.io
| Rust, in Practice and in Theory |
| Boston University               |
| Fall 2025                       |
This is a course about the programming language Rust, and, for better
or for worse, this can mean a lot of things.  Part of what making Rust
fascinating (and what makes this course a pain to teach) is that it has a
lot to offer.  You might be coming to this course with an interest in
systems programming (an unreasonbly broad term), or PL design (ditto).
Regardless, our goal is not just to program in Rust, but also to
understand the theoretical underpinnings of the language. So in
reality you'll probably need to have at least a passing interest in
both perspectives.

We'll spend the first half of this course learning how to program in
Rust, and the second half working on a self-defined project in Rust or
an adjacent topics.
* Links
+ [[file:Syllabus/main.pdf][Course Manual]]
+ [[https://piazza.com/bu/fall2025/cascs392m1][Piazza]]
+ [[https://www.gradescope.com/courses/1109910][Gradescope]] (6K4D32)
+ Reading:
  + [[https://doc.rust-lang.org/stable/book/][The Rust Programming Language]]
  + [[https://doc.rust-lang.org/stable/rust-by-example/index.html][Rust by Example]]
  + [[https://doc.rust-lang.org/nomicon/intro.html][Rustonomicon]]
  + [[https://rust-unofficial.github.io/too-many-lists/index.html][Learning Rust With Entirely Too Many Linked Lists]]
  + [[https://doc.rust-lang.org/reference/][The Rust Reference]]
  + [[https://homepages.inf.ed.ac.uk/wadler/papers/lineartaste/lineartaste-revised.pdf][A taste of linear logic]]
  + [[https://www.sciencedirect.com/science/article/pii/S0304397599000547][Operational interpretations of linear logic]]
  + [[https://dl.acm.org/doi/10.1145/3443420][A Lightweight Formalism for Reference Lifetimes and Borrowing in Rust]]
+ Other Resources:
  + [[https://github.com/nmmull/salt392/tree/main][salt392]]
  + [[https://doc.rust-lang.org/std/index.html][Rust Standard Library]]
  + [[https://github.com/rustviz/rustviz][RustViz]]
* Calendar
|-------+---------------------------------------------+-------------------------|
| Date  | Topic                                       | Notes                   |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 1][09-02]] | Basics I: Introduction, Installation, Cargo |                         |
| [[*Meeting 2][09-04]] | Basics II: Common Programming Concepts      | [[file:Assignments/hw1.org][A1 out]]                  |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 3][09-09]] | Data I: Stack, Heap, References             |                         |
| [[*Meeting 4][09-11]] | Data II: Struct, Enums, Collections         | [[file:Assignments/hw2.org][A2 out]], A1 due          |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 5][09-16]] | Theory I: Straight Line Programs (salt0)    |                         |
| [[*Meeting 6][09-18]] | Theory II: Variables and References (salt1) | [[file:Assignments/hw3.org][A3 out]], A2 due          |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 7][09-23]] | Functions I: Generics and Traits            |                         |
| [[*Meeting 8][09-25]] | Functions II: Closures and Iterators        |                         |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 9][09-30]] | Basics III: Boxes, Recursive Data           |                         |
| [[*Meeting 10][10-02]] | Basics IV: Lifetimes                        | [[file:Assignments/hw4.org][A4 out]], A3 due          |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 11][10-07]] | Theory III: Mutable References (salt2)      |                         |
| [[*Meeting 12][10-09]] | Theory IV: Mutable References (salt2)       | [[file:Assignments/hw5/hw5.org][A5 out]], A4 due          |
|-------+---------------------------------------------+-------------------------|
| 10-14 | *NO CLASS*                                  | Indigenous Peoples' Day |
| [[*Meeting 13][10-16]] | Smart Pointers: ~Rc<T>~ and ~RefCell<T>~    | A5 due                  |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 14][10-21]] | TBD                                         |                         |
| [[*Meeting 15][10-23]] | *Midterm Exam*                              | A6 out                  |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 16][10-28]] | Theory V: Conditionals                      |                         |
| [[*Meeting 17][10-30]] | Theory VI: Linear Typed Lambda Calculus     | FP outline out, A6 due  |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 18][11-04]] | Advanced I: TBD                             |                         |
| [[*Meeting 19][11-06]] | Project Meetings                            | FP outline due          |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 20][11-11]] | Advanced II: TBD                            |                         |
| [[*Meeting 21][11-13]] | Project Meetings                            | FP check-in 1           |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 22][11-18]] | Advanced III: TBD                           |                         |
| [[*Meeting 23][11-20]] | Project Meetings                            | FP check-in 2           |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 24][11-25]] | Advanced IV: TBD                            |                         |
| 11-27 | *NO CLASS*                                  | Thanksgiving            |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 25][12-02]] | Advance V: TBD                              |                         |
| [[*Meeting 26][12-04]] | Final Project Presentations                 |                         |
|-------+---------------------------------------------+-------------------------|
| [[*Meeting 27][12-09]] | Final Project Presentations                 | FP due                  |
|-------+---------------------------------------------+-------------------------|
* Week 1: Basics ✓
** Meeting 1
*** Title: *Course Introduction*
*** Reading:
+ Syllabus
+ The Rust Programming Language (RPL): [[https://doc.rust-lang.org/book/foreword.html][Forward]]
+ RPL: [[https://doc.rust-lang.org/book/ch00-00-introduction.html][Introduction]]
+ RPL 1: [[https://doc.rust-lang.org/book/ch01-00-getting-started.html][Getting Started]]
*** Material:
**** Slides: [[file:Slides/01-intro.pdf][01-intro.pdf]]
** Meeting 2
*** Title: *Common Programming Concepts*
*** Reading:
+ RPL 2: [[https://doc.rust-lang.org/book/ch02-00-guessing-game-tutorial.html][Programming a Guessing Game]]
+ RPL 3: [[https://doc.rust-lang.org/book/ch03-00-common-programming-concepts.html][Common Programming Concepts]]
*** Material:
**** Slides: [[file:Slides/02-basics.pdf][02-basics.pdf]]
**** Assignment: [[file:Assignments/hw1.org][hw1.html]]
* Week 2: Data ✓
** Meeting 3
*** Title: *Stack, Heap, References*
*** Reading:
+ RPL 4.2: [[https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html][References and Borrowing]]
+ RPL 4.1: [[https://doc.rust-lang.org/book/ch04-01-what-is-ownership.html][What is Ownership?]]
*** Material:
**** Slides: [[file:Slides/03-stack-heap.pdf][03-stack-heap.pdf]]
** Meeting 4
*** Title: *Structures, Enumerations, Collections*
*** Reading:
+ RPL 5: [[https://doc.rust-lang.org/book/ch05-00-structs.html][Using Structs to Structure Related Data]]
+ PRL 6: [[https://doc.rust-lang.org/book/ch06-00-enums.html][Enums and Pattern Matching]]
+ RPL 18: [[https://doc.rust-lang.org/book/ch18-00-patterns.html][Patterns and Matching]]
+ RPL 4.3: [[https://doc.rust-lang.org/book/ch04-03-slices.html][The Slice Type]]
+ RPL 8: [[https://doc.rust-lang.org/book/ch08-00-common-collections.html][Common Collections]]
*** Material:
**** Slides: [[file:Slides/04-structs-enums.pdf][04-structs-enums.pdf]]
**** Assignment: [[file:Assignments/hw2.org][hw2.html]]
* Week 3: Theory ✓
** Meeting 5
*** Title: *salt0: Straight Line Programs*
*** Material:
**** Specification: [[file:notes/salt0/salt0.pdf][salt0.pdf]]
**** Reference implementation: [[https://github.com/nmmull/salt392/tree/main/salt0][salt0]]
** Meeting 6
*** Title: *salt1: Mutable Variables, Immutable References*
*** Material:
**** Specification: [[file:notes/salt1/salt1.pdf][salt1.pdf]]
*** Assignment:
**** Landing page: [[file:Assignments/hw3.org][hw3.html]]
**** Starter code: [[https://github.com/nmmull/salt392/tree/main/salt1][salt1]]
* Week 4: Functions ✓
** Meeting 7
*** Title: *Generics and Traits*
*** Reading:
+ RPL 10.1: [[https://doc.rust-lang.org/book/ch10-01-syntax.html][Generic Data Types]]
+ RPL 10.2: [[https://doc.rust-lang.org/book/ch10-02-traits.html][Traits: Defining Shared Behavior]]
*** Material:
**** Slides: [[file:Slides/07-traits.pdf][07-traits.pdf]]
**** Examples: [[file:Code/07-lecture/main.rs][main.rs]]
** Meeting 8
*** Title: *Closures and Iterators*
*** Reading:
+ RPL 13: [[https://doc.rust-lang.org/book/ch13-00-functional-features.html][Functional Language Features: Iterators and Closures]]
*** Material:
**** Slides: [[file:Slides/08-closures-iterators.pdf][08-closures-iterators.pdf]]
**** Examples: [[file:Code/08-lecture/main.rs][main.rs]]
**** Assignment: [[file:Assignments/hw4.org][hw4.html]]
* Week 5: Basics ✓
** Meeting 9
*** Title: *Boxes and Recursive Data*
+ RPL 15.1: [[https://doc.rust-lang.org/stable/book/ch15-01-box.html][Using ~Box<T>~ to Point to Data on the Heap]]
+ RPL 15.2: [[https://doc.rust-lang.org/stable/book/ch15-02-deref.html][Treating Smart Pointers Like Regular References with ~Deref~]]
+ RPL 15.3: [[https://doc.rust-lang.org/stable/book/ch15-03-drop.html][Running Code on Cleanup with the ~Drop~ Trait]]
*** Material:
**** Slides: [[file:Slides/09-box.pdf][09-box.pdf]]
** Meeting 10
*** Title: *Lifetimes*
*** Reading:
+ RPL 10.3: [[https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html][Validating References with Lifetimes]]
+ Rustonomicon:
  + 3.2: [[https://doc.rust-lang.org/nomicon/aliasing.html][Aliasing]]
  + 3.3: [[https://doc.rust-lang.org/nomicon/lifetimes.html][Lifetimes]]
  + 3.4: [[https://doc.rust-lang.org/nomicon/lifetime-mismatch.html][Limits of Lifetimes]]
  + 3.5: [[https://doc.rust-lang.org/nomicon/lifetime-elision.html][Lifetime Elision]]
*** Material:
**** Slides: [[file:Slides/10-lifetimes.pdf][10-lifetimes.pdf]]
**** Assignment: [[file:Assignments/hw5/hw5.org][hw5.html]]
* Week 6: Theory ✓
** Meeting 11
*** Title: *Mutable References*
** Meeting 12
* Week 7: Smart Pointers
** Meeting 13
*** Title: *Reference Counting and Internal Mutability*
*** Reading:
+ RPL 15.4: [[https://doc.rust-lang.org/stable/book/ch15-04-rc.html][~Rc<T>~, the Reference Counted Smart Pointer]]
+ RPL 15.5: [[https://doc.rust-lang.org/stable/book/ch15-05-interior-mutability.html][~RefCell<T>~ and the Interior Mutability Pattern]]
+ RPL 15.6: [[https://doc.rust-lang.org/stable/book/ch15-06-reference-cycles.html][Reference Cycles Can Leak Memory]]
* Week 8: Midterm
** Meeting 14
*** Title: *Asynchronous Programming*
** Meeting 15
*** Title: *Midterm Examination*
* Week 9: Theory
** Meeting 16
*** Title: *Conditionals*
** Meeting 17
*** Title: *Linear Typed Lambda Calculus*
* Week 10: TBD
** Meeting 18
*** Title: *TBD*
** Meeting 19
*** Title: *Project Meetings*
* Week 11: TBD
** Meeting 20
*** Title: *TBD*
** Meeting 21
*** Title: *Project Meetings*
* Week 12: TBD
** Meeting 22
*** Title: *TBD*
** Meeting 23
*** Title: *Project Meetings*
* Week 13: TBD
** Meeting 24
*** Title: *TBD*
* Week 14: Final Project
** Meeting 25
*** Title: *TBD*
** Meeting 26
*** Title: *Final Project Presentations*
* Week 15: Final Project
** Meeting 27
*** Title: *Final Project Presentations*
